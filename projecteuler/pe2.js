'use strict';
// 2024-12-31 10:12:18
// <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
// $$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>
// <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>

const limit = 40_000_000;
function main(limit) {
  let [a, b, c] = [0, 1, 1];
  let s = 0;
  while (c < limit) {
    const nxt = a + b;
    a = b;
    b = nxt;
    c = a + b;
    if (b % 2 === 0) {
      s += b;
    }
  }
  console.log(c, s);
}
//ans- 233168
main(limit);

function fib(n) {
  if (n === 0) {
    return 0;
  } else if (n === 1) {
    return 1;
  } else return fib(n - 1) + fib(n - 2);
}

// have pitfalls
function fib2(n) {
  const a = (1 + 5 ** 0.5) / 2;
  const b = (1 - 5 ** 0.5) / 2;
  return Math.round((a ** n - b ** n) / 5 ** 0.5);
}
